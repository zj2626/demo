SELECT current_time;

--Q1;
EXPLAIN EXTENDED SELECT 
	L_RETURNFLAG, 
	L_LINESTATUS, 
	SUM(L_QUANTITY) AS SUM_QTY, 
	SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE, 
	SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS SUM_DISC_PRICE, 
	SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT) * (1 + L_TAX)) AS SUM_CHARGE, 
	AVG(L_QUANTITY) AS AVG_QTY, 
	AVG(L_EXTENDEDPRICE) AS AVG_PRICE, 
	AVG(L_DISCOUNT) AS AVG_DISC, 
	COUNT(*) AS COUNT_ORDER 
FROM 
	LINEITEM
WHERE 
	L_SHIPDATE <= DATE'1998-12-01' - INTERVAL '90' DAY
GROUP BY 
	L_RETURNFLAG, 
	L_LINESTATUS
ORDER BY 
	L_RETURNFLAG, 
	L_LINESTATUS;

SHOW WARNINGS;	
SELECT current_time;

--Q2;
EXPLAIN EXTENDED SELECT
	S_ACCTBAL, 
	S_NAME, 
	N_NAME, 
	P_PARTKEY, 
	P_MFGR, 
	S_ADDRESS, 
	S_PHONE, 
	S_COMMENT
FROM 
	PART, 
	SUPPLIER, 
	PARTSUPP, 
	NATION, 
	REGION
WHERE 
	P_PARTKEY = PS_PARTKEY
	AND S_SUPPKEY = PS_SUPPKEY 
	AND P_SIZE = 15
	AND P_TYPE LIKE '%BRASS'
	AND S_NATIONKEY = N_NATIONKEY 
	AND N_REGIONKEY = R_REGIONKEY 
	AND R_NAME = 'EUROPE'
	AND PS_SUPPLYCOST = ( 
		SELECT 
			MIN(PS_SUPPLYCOST)
		FROM 
			PARTSUPP, SUPPLIER, 
			NATION, REGION
		WHERE 
			P_PARTKEY = PS_PARTKEY
			AND S_SUPPKEY = PS_SUPPKEY
			AND S_NATIONKEY = N_NATIONKEY
			AND N_REGIONKEY = R_REGIONKEY
			AND R_NAME = 'EUROPE' )
ORDER BY 
	S_ACCTBAL DESC,
	N_NAME,
	S_NAME,
	P_PARTKEY;

SHOW WARNINGS;	
SELECT current_time;

--Q3;
EXPLAIN EXTENDED SELECT
	L_ORDERKEY, 
	SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
	O_ORDERDATE,
	O_SHIPPRIORITY
FROM 
	CUSTOMER, 
	ORDERS, 
	LINEITEM 
WHERE
	C_MKTSEGMENT = 'BUILDING'
	AND C_CUSTKEY = O_CUSTKEY
	AND L_ORDERKEY = O_ORDERKEY
	AND O_ORDERDATE < DATE '1995-03-15'
	AND L_SHIPDATE > DATE '1995-03-15' 
GROUP BY
	L_ORDERKEY,
	O_ORDERDATE,
	O_SHIPPRIORITY
ORDER BY
	REVENUE DESC,
	O_ORDERDATE;

SHOW WARNINGS;
SELECT current_time;	

--Q4;
EXPLAIN EXTENDED SELECT
	O_ORDERPRIORITY, 
	COUNT(*) AS ORDER_COUNT
FROM
	ORDERS
WHERE
	O_ORDERDATE >= DATE '1993-07-01'
	AND O_ORDERDATE < DATE '1993-07-01' + INTERVAL '3' MONTH
	AND EXISTS ( 
		SELECT
			* 
		FROM
			LINEITEM
		WHERE
			L_ORDERKEY = O_ORDERKEY
			AND L_COMMITDATE < L_RECEIPTDATE 
		)
GROUP BY
	O_ORDERPRIORITY 
ORDER BY
	O_ORDERPRIORITY;

SHOW WARNINGS;
SELECT current_time;	

--Q5;
EXPLAIN EXTENDED SELECT
	N_NAME,
	SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE
FROM
	CUSTOMER,
	ORDERS,
	LINEITEM,
	SUPPLIER,
	NATION,
	REGION
WHERE
	C_CUSTKEY = O_CUSTKEY
	AND L_ORDERKEY = O_ORDERKEY
	AND L_SUPPKEY = S_SUPPKEY
	AND C_NATIONKEY = S_NATIONKEY
	AND S_NATIONKEY = N_NATIONKEY
	AND N_REGIONKEY = R_REGIONKEY
	AND R_NAME = 'ASIA'
	AND O_ORDERDATE >= DATE '1994-01-01'
	AND O_ORDERDATE < DATE '1994-01-01' + INTERVAL '1' YEAR
GROUP BY 
	N_NAME
ORDER BY
	REVENUE DESC;

SHOW WARNINGS;
SELECT current_time;	

--Q6;
EXPLAIN EXTENDED SELECT
	SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE
FROM
	LINEITEM
WHERE
	L_SHIPDATE >= DATE '1994-01-01'
	AND L_SHIPDATE < DATE '1994-01-01' + INTERVAL '1' YEAR
	AND L_DISCOUNT BETWEEN 0.06 - 0.01 AND 0.06 + 0.01
	AND L_QUANTITY < 24;

SHOW WARNINGS;
SELECT current_time;	

--Q7;
EXPLAIN EXTENDED SELECT
	SUPP_NATION,
	CUST_NATION,
	L_YEAR, SUM(VOLUME) AS REVENUE
FROM (
	SELECT
		N1.N_NAME AS SUPP_NATION,
		N2.N_NAME AS CUST_NATION,
		EXTRACT(YEAR FROM L_SHIPDATE) AS L_YEAR,
		L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME
	FROM
		SUPPLIER,
		LINEITEM,
		ORDERS,
		CUSTOMER,
		NATION N1,
		NATION N2
	WHERE
		S_SUPPKEY = L_SUPPKEY
		AND O_ORDERKEY = L_ORDERKEY
		AND C_CUSTKEY = O_CUSTKEY
		AND S_NATIONKEY = N1.N_NATIONKEY
		AND C_NATIONKEY = N2.N_NATIONKEY
		AND (
			(N1.N_NAME = 'FRANCE' AND N2.N_NAME = 'GERMANY')
			OR (N1.N_NAME = 'GERMANY' AND N2.N_NAME = 'FRANCE')
		)
		AND L_SHIPDATE BETWEEN DATE '1995-01-01' AND DATE '1996-12-31' 
	) AS SHIPPING
GROUP BY
	SUPP_NATION,
	CUST_NATION,
	L_YEAR
ORDER BY
	SUPP_NATION,
	CUST_NATION,
	L_YEAR;

SHOW WARNINGS;
SELECT current_time;	

--Q8;
EXPLAIN EXTENDED SELECT
	O_YEAR,
	SUM(CASE 
		WHEN NATION = 'BRAZIL' 
		THEN VOLUME
		ELSE 0
	END) / SUM(VOLUME) AS MKT_SHARE
FROM (
	SELECT
		EXTRACT(YEAR FROM O_ORDERDATE) AS O_YEAR,
		L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME,
		N2.N_NAME AS NATION
	FROM
		PART,
		SUPPLIER,
		LINEITEM,
		ORDERS,
		CUSTOMER,
		NATION N1,
		NATION N2,
		REGION
	WHERE
		P_PARTKEY = L_PARTKEY
		AND S_SUPPKEY = L_SUPPKEY
		AND L_ORDERKEY = O_ORDERKEY
		AND O_CUSTKEY = C_CUSTKEY
		AND C_NATIONKEY = N1.N_NATIONKEY
		AND N1.N_REGIONKEY = R_REGIONKEY
		AND R_NAME = 'AMERICA'
		AND S_NATIONKEY = N2.N_NATIONKEY
		AND O_ORDERDATE BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'
		AND P_TYPE = 'ECONOMY ANODIZED STEEL' 
	) AS ALL_NATIONS 
GROUP BY 
	O_YEAR 
ORDER BY
	O_YEAR;

SHOW WARNINGS;
SELECT current_time;	

--Q9;
EXPLAIN EXTENDED SELECT
	NATION,
	O_YEAR,
	SUM(AMOUNT) AS SUM_PROFIT
FROM (
	SELECT
		N_NAME AS NATION,
		EXTRACT(YEAR FROM O_ORDERDATE) AS O_YEAR,
		L_EXTENDEDPRICE * (1 - L_DISCOUNT) - PS_SUPPLYCOST * L_QUANTITY AS AMOUNT
	FROM
		PART,
		SUPPLIER,
		LINEITEM,
		PARTSUPP,
		ORDERS,
		NATION 
	WHERE
		S_SUPPKEY = L_SUPPKEY
		AND PS_SUPPKEY = L_SUPPKEY
		AND PS_PARTKEY = L_PARTKEY
		AND P_PARTKEY = L_PARTKEY
		AND O_ORDERKEY = L_ORDERKEY
		AND S_NATIONKEY = N_NATIONKEY
		AND P_NAME LIKE '%GREEN%' 
	) AS PROFIT
GROUP BY
	NATION,
	O_YEAR
ORDER BY
	NATION,
	O_YEAR DESC;

SHOW WARNINGS;
SELECT current_time;	

--Q10;
EXPLAIN EXTENDED SELECT
	C_CUSTKEY,
	C_NAME,
	SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
	C_ACCTBAL,
	N_NAME,
	C_ADDRESS,
	C_PHONE,
	C_COMMENT
FROM
	CUSTOMER,
	ORDERS,
	LINEITEM,
	NATION
WHERE
	C_CUSTKEY = O_CUSTKEY
	AND L_ORDERKEY = O_ORDERKEY
	AND O_ORDERDATE >= DATE '1993-10-01'
	AND O_ORDERDATE < DATE '1993-10-01' + INTERVAL '3' MONTH
	AND L_RETURNFLAG = 'R'
	AND C_NATIONKEY = N_NATIONKEY
GROUP BY
	C_CUSTKEY,
	C_NAME,
	C_ACCTBAL,
	C_PHONE,
	N_NAME,
	C_ADDRESS,
	C_COMMENT
ORDER BY
	REVENUE DESC;

SHOW WARNINGS;
SELECT current_time;	

--Q11;
EXPLAIN EXTENDED SELECT
	PS_PARTKEY,
	SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VALUE
FROM 
	PARTSUPP,
	SUPPLIER,
	NATION 
WHERE
	PS_SUPPKEY = S_SUPPKEY
	AND S_NATIONKEY = N_NATIONKEY
	AND N_NAME = 'GERMANY'
GROUP BY
	PS_PARTKEY	HAVING
		SUM(PS_SUPPLYCOST * PS_AVAILQTY) > ( 
			SELECT 
				SUM(PS_SUPPLYCOST * PS_AVAILQTY) * 0.0001/1
			FROM
				PARTSUPP,
				SUPPLIER,
				NATION
			WHERE
				PS_SUPPKEY = S_SUPPKEY
				AND S_NATIONKEY = N_NATIONKEY
				AND N_NAME = 'GERMANY'
		)
ORDER BY
	VALUE DESC;

SHOW WARNINGS;
SELECT current_time;	

--Q12;
EXPLAIN EXTENDED SELECT
	L_SHIPMODE,
	SUM(CASE
		WHEN O_ORDERPRIORITY = '1-URGENT'
			OR O_ORDERPRIORITY = '2-HIGH'
		THEN 1
		ELSE 0
	END) AS HIGH_LINE_COUNT,
	SUM(CASE
		WHEN O_ORDERPRIORITY <> '1-URGENT'
			AND O_ORDERPRIORITY <> '2-HIGH'
		THEN 1
		ELSE 0 
	END) AS LOW_LINE_COUNT
FROM
	ORDERS,
	LINEITEM 
WHERE
	O_ORDERKEY = L_ORDERKEY
	AND L_SHIPMODE IN ('MAIL', 'SHIP')
	AND L_COMMITDATE < L_RECEIPTDATE
	AND L_SHIPDATE < L_COMMITDATE
	AND L_RECEIPTDATE >= DATE '1994-01-01'
	AND L_RECEIPTDATE < DATE '1994-01-01' + INTERVAL '1' YEAR
GROUP BY
	L_SHIPMODE
ORDER BY
	L_SHIPMODE;

SHOW WARNINGS;
SELECT current_time;	

--Q13;
CREATE VIEW ORDERS_PER_CUSTS (CUSTKEY, ORDERCOUNT) AS
    SELECT
        C_CUSTKEY,
        COUNT(O_ORDERKEY)
    FROM
        CUSTOMER LEFT OUTER JOIN ORDERS ON
        C_CUSTKEY = O_CUSTKEY
        AND O_COMMENT NOT LIKE '%SPECIAL%REQUESTS%'
    GROUP BY
        C_CUSTKEY;

EXPLAIN EXTENDED SELECT
    ORDERCOUNT,
    COUNT(*) AS CUSTDIST
FROM
    ORDERS_PER_CUSTS
GROUP BY
    ORDERCOUNT
ORDER BY
    CUSTDIST DESC,
    ORDERCOUNT DESC;
    
SHOW WARNINGS;

DROP VIEW ORDERS_PER_CUSTS;  
SELECT current_time;	

--Q14;
EXPLAIN EXTENDED SELECT
	100.00 * SUM(CASE
		WHEN P_TYPE LIKE 'PROMO%' 
		THEN L_EXTENDEDPRICE * (1 - L_DISCOUNT)
		ELSE 0
	END) / SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS PROMO_REVENUE
FROM
	LINEITEM,
	PART
WHERE
	L_PARTKEY = P_PARTKEY
	AND L_SHIPDATE >= DATE '1995-09-01'
	AND L_SHIPDATE < DATE '1995-09-01' + INTERVAL '1' MONTH;

SHOW WARNINGS;
SELECT current_time;	

--Q15;
CREATE VIEW REVENUE0 (SUPPLIER_NO, TOTAL_REVENUE) AS
	SELECT
		L_SUPPKEY,
		SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT))
	FROM LINEITEM
	WHERE
		L_SHIPDATE >= DATE'1996-01-01'
		AND L_SHIPDATE < DATE'1996-01-01' + INTERVAL '3' MONTH
	GROUP BY
		L_SUPPKEY;
	
EXPLAIN EXTENDED SELECT
	S_SUPPKEY,
	S_NAME,
	S_ADDRESS,
	S_PHONE,
	TOTAL_REVENUE
FROM 
	SUPPLIER,
	REVENUE0
WHERE
	S_SUPPKEY = SUPPLIER_NO
	AND TOTAL_REVENUE = ( 
		SELECT
			MAX(TOTAL_REVENUE)
		FROM REVENUE0
	)
ORDER BY
	S_SUPPKEY;

SHOW WARNINGS;

DROP VIEW REVENUE0;
SELECT current_time;	

--Q16;
EXPLAIN EXTENDED SELECT
	P_BRAND,
	P_TYPE,
	P_SIZE,
	COUNT(DISTINCT PS_SUPPKEY) AS SUPPLIER_CNT 
FROM 
	PARTSUPP,
	PART
WHERE
	P_PARTKEY = PS_PARTKEY
	AND P_BRAND <> 'BRAND#45'
	AND P_TYPE NOT LIKE 'MEDIUM POLISHED%'
	AND P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9)
	AND PS_SUPPKEY NOT IN (
		SELECT
			S_SUPPKEY
		FROM
			SUPPLIER
		WHERE
			S_COMMENT LIKE '%CUSTOMER%COMPLAINTS%'
	)
GROUP BY
	P_BRAND,
	P_TYPE,
	P_SIZE
ORDER BY
	SUPPLIER_CNT DESC,
	P_BRAND,
	P_TYPE,
	P_SIZE;

SHOW WARNINGS;
SELECT current_time;	

--Q17;
EXPLAIN EXTENDED SELECT
	SUM(L_EXTENDEDPRICE) / 7.0 AS AVG_YEARLY 
FROM
	LINEITEM,
	PART
WHERE
	P_PARTKEY = L_PARTKEY
	AND P_BRAND = 'BRAND#23'
	AND P_CONTAINER = 'MED BOX'
	AND L_QUANTITY < (
		SELECT
			0.2 * AVG(L_QUANTITY)
		FROM 
			LINEITEM
		WHERE L_PARTKEY = P_PARTKEY
	);

SHOW WARNINGS;
SELECT current_time;	

--Q18;
EXPLAIN EXTENDED SELECT
	C_NAME,
	C_CUSTKEY,
	O_ORDERKEY,
	O_ORDERDATE,
	O_TOTALPRICE,
	SUM(L_QUANTITY)
FROM
	CUSTOMER,
	ORDERS,
	LINEITEM
WHERE
	O_ORDERKEY IN (
		SELECT
			L_ORDERKEY
		FROM
			LINEITEM
		GROUP BY
			L_ORDERKEY HAVING
				SUM(L_QUANTITY) > 300 
	)
	AND C_CUSTKEY = O_CUSTKEY
	AND O_ORDERKEY = L_ORDERKEY
GROUP BY 
	C_NAME,
	C_CUSTKEY,
	O_ORDERKEY,
	O_ORDERDATE,
	O_TOTALPRICE
ORDER BY
	O_TOTALPRICE DESC,
	O_ORDERDATE ;

SHOW WARNINGS;
SELECT current_time;	

--Q19;
EXPLAIN EXTENDED SELECT
	SUM(L_EXTENDEDPRICE* (1 - L_DISCOUNT)) AS REVENUE
FROM
	LINEITEM,
	PART
WHERE
	(
		P_PARTKEY = L_PARTKEY
		AND P_BRAND = 'BRAND#12'
		AND P_CONTAINER IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') 
		AND L_QUANTITY >= 1	AND L_QUANTITY <= 1+10
		AND P_SIZE BETWEEN 1 AND 5
		AND L_SHIPMODE IN ('AIR', 'AIR REG')
		AND L_SHIPINSTRUCT = 'DELIVER IN PERSON' 
	) 
	OR 
	(
		P_PARTKEY = L_PARTKEY
		AND P_BRAND = 'BRAND#23'
		AND P_CONTAINER IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
		AND L_QUANTITY >= 10 AND L_QUANTITY <= 10+10
      	AND P_SIZE BETWEEN 1 AND 10
		AND L_SHIPMODE IN ('AIR', 'AIR REG')
		AND L_SHIPINSTRUCT = 'DELIVER IN PERSON' 
	)
	OR
	(
		P_PARTKEY = L_PARTKEY 
		AND P_BRAND = 'BRAND#34'
		AND P_CONTAINER IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
		AND L_QUANTITY >= 20 AND L_QUANTITY <= 20+10
		AND P_SIZE BETWEEN 1 AND 15
		AND L_SHIPMODE IN ('AIR', 'AIR REG')
		AND L_SHIPINSTRUCT = 'DELIVER IN PERSON' 
	);

SHOW WARNINGS;
SELECT current_time;	

--Q20;
EXPLAIN EXTENDED SELECT 
	S_NAME,
	S_ADDRESS
FROM
	SUPPLIER, NATION
WHERE
	S_SUPPKEY IN (
		SELECT
			PS_SUPPKEY
		FROM
			PARTSUPP
		WHERE
			PS_PARTKEY IN (
				SELECT
					P_PARTKEY
				FROM
					PART
				WHERE
					P_NAME LIKE 'FOREST%'
			)
		AND PS_AVAILQTY > (
			SELECT
				0.5 * SUM(L_QUANTITY)
			FROM
				LINEITEM
			WHERE
				L_PARTKEY = PS_PARTKEY
				AND L_SUPPKEY = PS_SUPPKEY
				AND L_SHIPDATE >= DATE '1994-01-01'
				AND L_SHIPDATE < DATE '1994-01-01' + INTERVAL '1' YEAR
		)
	)
	AND S_NATIONKEY = N_NATIONKEY
	AND N_NAME = 'CANADA'
ORDER BY 
	S_NAME;

SHOW WARNINGS;
SELECT current_time;
	
--Q21;
EXPLAIN EXTENDED SELECT
	S_NAME,
	COUNT(*) AS NUMWAIT
FROM
	SUPPLIER,
	LINEITEM L1,
	ORDERS,
	NATION
WHERE
	S_SUPPKEY = L1.L_SUPPKEY
	AND O_ORDERKEY = L1.L_ORDERKEY
	AND O_ORDERSTATUS = 'F'
	AND L1.L_RECEIPTDATE > L1.L_COMMITDATE
	AND EXISTS (
		SELECT 
			*
		FROM
			LINEITEM L2
		WHERE
			L2.L_ORDERKEY = L1.L_ORDERKEY 
			AND L2.L_SUPPKEY <> L1.L_SUPPKEY 
	)
	AND NOT EXISTS(
		SELECT
			*
		FROM 
			LINEITEM L3
		WHERE
			L3.L_ORDERKEY = L1.L_ORDERKEY
			AND L3.L_SUPPKEY <> L1.L_SUPPKEY
			AND L3.L_RECEIPTDATE > L3.L_COMMITDATE
	)
	AND S_NATIONKEY = N_NATIONKEY 
	AND N_NAME = 'SAUDI ARABIA' 
GROUP BY
	S_NAME
ORDER BY
	NUMWAIT DESC,
	S_NAME ;

SHOW WARNINGS;
SELECT current_time;	

--Q22;
EXPLAIN EXTENDED SELECT
	CNTRYCODE,
	COUNT(*) AS NUMCUST,
	SUM(C_ACCTBAL) AS TOTACCTBAL
FROM (
	SELECT
		SUBSTR(C_PHONE, 1, 2) AS CNTRYCODE,
		C_ACCTBAL
	FROM
		CUSTOMER
	WHERE
		SUBSTR(C_PHONE, 1, 2) IN
			('13', '31', '23', '29', '30', '18', '17')
		AND C_ACCTBAL > (
			SELECT
				AVG(C_ACCTBAL)
			FROM
				CUSTOMER 
			WHERE 
				C_ACCTBAL > 0.00
				AND SUBSTR(C_PHONE, 1, 2) IN 
					('13', '31', '23', '29', '30', '18', '17')
		)
		AND NOT EXISTS ( 
			SELECT
				*
			FROM
				ORDERS
			WHERE
				O_CUSTKEY = C_CUSTKEY
			)
	) AS CUSTSALE 
GROUP BY 
	CNTRYCODE 
ORDER BY
	CNTRYCODE;
	
SHOW WARNINGS;	
SELECT current_time;	
