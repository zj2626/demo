数据库的约束规则和语义优化:

1. 数据库完整性约束:

2.数据完整性: 是指数据的精确性(Accuracy)和可靠性(Reliability)
    1.精确性: 通过列,列类型进行规范以及包含非空约束在内的方法实现数据库完整性约束
    2.可靠性: 数据以事务的形式完整的保存,不丢失,还有其他保障(备份恢复机制)

    类型:
        1.实体完整性(Entity Integrity): 表,自己(一个实体对应数据库中的一个表)
            要求必须有一个非空的唯一标识--主键 (唯一索引允许存在空值,不允许重复)
        2.域完整性(Domain Integrity):   字段, 实体的局部
            要求保证字段取值合理性 (check, 默认值, 非空, 可空)
        3.参照完整性(Referential Integrity):  表与表关系, 实体与实体的关系(外键)
        4.用户自定义完整性(User-Defined Integrity): 用户增加的限制(依然是通过数据实现的), 比如用户自定义的非空约束


1.语义优化:
    1.语义转换: 因为完整性限制等原因引发的转换成立成为语义转换
    2.语义优化: 因为语义转换形成的优化叫语义优化
        语义转换就是一种查询写成另一种结果相同但是查询效率不同的查询语句, 其中引发了一定的优化效果,这个过程就是语义优化
        语义优化不同于之前的那些比如连接优化,子查询优化等(这些是外在表现上的优化),语义优化是从意义上,是从sql语句的含义上进行了一定的变化

    常见的示例:
        1.连接消除(Link.txt)
            * mysql不支持
        2.连接引入:增加新的连接使原始关系变小或降低选择率
            * mysql不支持
        3.谓词引入:根据完整性约束,增加新的谓词(比如引入有索引的列),使查询更快
            * mysql不支持
        4.监测空集回答: 当查询中谓词和约束相悖,可直接推出条件结果为false,得知结果集为空
            * mysql支持
            eg: 比如一个字段是非空约束的, 但是查询条件中要求为空,则优化器会直接优化为Impossible WHERE
        5.排序优化: order by,利用索引,并检查orderby的必要性
            * mysql支持
            eg: 就是排序的字段要带索引,不过有的情况下即使有索引页不会用,视具体情况而定
        6.唯一性使用: distinct, 利用索引,并检查distinct的必要性
            * mysql支持
            eg: distinct支持索引
