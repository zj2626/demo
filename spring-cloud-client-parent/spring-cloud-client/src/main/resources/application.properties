server.port=8090

spring.profiles.active=default
spring.application.name=spring-cloud-client01
spring.zipkin.base-url=http://localhost:18093
# 将采样比例设置为 1.0，也就是全部都需要。默认是 0.1
spring.sleuth.sampler.probability=1.0
#spring.sleuth.web.client.enabled=true

###############################
############各种端点############
###############################
#   根据端点的作用来说，我们可以原生端点分为三大类：
##  应用配置类：获取应用程序中加载的应用配置、环境变量、自动化配置报告等与Spring Boot应用密切相关的配置类信息。
##  操作控制类：提供了对应用的关闭等操作类功能。
##  度量指标类：获取应用程序运行过程中用于监控的度量指标，比如：内存信息、线程池信息、HTTP请求统计等。
##
##  ## 应用配置类
##  /conditions 该端点用来获取应用的自动化配置报告，其中包括所有自动化配置的候选项。同时还列出了每个候选项自动化配置的各个先决条件是否满足
##      positiveMatches 条件匹配成功的自动化配置
##      negativeMatches 条件匹配失败的自动化配置
##  /beans 该端点用来获取应用上下文中创建的所有Bean
##  /configprops 该端点用来获取应用中配置的属性信息报告，prefix属性代表了属性的配置前缀，properties代表了各个属性的名称和值
##  /env 用来获取应用所有可用的环境属性报告。包括：环境变量、JVM属性、应用的配置配置、命令行中的参数 (都可以在程序中通过表达式获取值)
##
##  ## 操作控制类
##  /shutdown
##
##  ## 度量指标类
##  /metrics 该端点用来返回当前应用的各类重要度量指标，比如：内存信息、线程信息、垃圾回收信息等
##  /health 用来获取应用的各类健康指标信息
##  /httptrace 用来返回基本的HTTP跟踪信息
##
# http://localhost:8190/actuator
# 设置管理服务的端口
management.server.port=8190
# *:暴露所有端点
management.endpoints.web.exposure.include=*
# 显式启用/shutdown /restart /pause端点
management.endpoint.shutdown.enabled=true
management.endpoint.restart.enabled=true
management.endpoint.pause.enabled=true
# 公开网络端点排除env端点之外
#management.endpoints.web.exposure.exclude=env
# 设置管理服务的上下文路径，默认值为 ""
management.server.servlet.context-path=/
# 设置管理端点的基本路径，默认值为：actuator
management.endpoints.web.base-path=/actuator
# http://localhost:8190/actuator/info
info.app.name=[@project.artifactId@] - [@project.version@]
info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@java.version@
info.app.java.target=@java.version@

#spring.cloud.config.label=master
#spring.cloud.config.profile=dev
#spring.cloud.config.uri=http://localhost:18092/
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=spring-cloud-config-server01
spring.cloud.bus.trace.enabled=true

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672

eureka.instance.instance-id=${spring.application.name}:${server.port}
# 实例续约间隔时间
eureka.instance.lease-renewal-interval-in-seconds=10
# 实例超时时间
eureka.instance.lease-expiration-duration-in-seconds=30

demo=${local.management.port}

# 开启feign-hystrix
feign.hystrix.enabled=true

# 开启健康检查
eureka.client.healthcheck.enabled=true
eureka.client.service-url.defaultZone=http://localhost:18080/eureka,http://localhost:18081/eureka,http://localhost:18082/eureka
